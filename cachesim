.data 

#array order: line size, data size, miss penalty

X: .word 2, 64, 5
.align 4
cache: .space 1000

.text 

main:

fill:
li $t1, 0 # temp var counter for loop
li $t2, 100 # exit condition loop 100 times
li $t3, 0 #array access counter

la $t0, cache
add $t3, $t0, $0    # load address of array into $t3
loop:
    beq $t2, $t1, escape #at 10 we go to Exit, defined below
    #access array
    li $v0, 15 #set value to store 
    sw $v0, ($t3)       # put number generated into array[n]
    addi $t3, $t3, 4    # next address   
    addi $t1, $t1, 1 #increment counter
    j loop #jumps back to the top of loop

escape:
